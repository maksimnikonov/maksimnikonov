
Tasks

1) in file Person [x]
  1.1 Based on code implement Person attributes
  1.2 Add method for introduce of person ->
   "My name is <name> and i am <age> years old"

2) In file Employee [x]
  2.1 Add different constructors
  2.2 Add getters and setters
  2.3 Add method for introduce of person ->
  "My name is <name> and i am <age> years old
   I am work as <jobTitle> in <company>"

3) in file Students [x]
  3.1 Create file students from scratch
  3.2 Add method for introduce of person ->
        "I am study in university <schoolName>"

4) in file FirstActivity [x]
  4.1 create few employees
  4.2 try to print them from top salary to less
  4.3 create person who became a student, and after that became a employee (must be one instance)

5) Create unit test for ALL classes (example in EmployeeTest) [x]

6) Create good calculator in SecondActivity [x]
7) Add tests for calculator [x]

8) Task for 1.5 point - when set firstName and secondName, check no numbers there. ->
setName("Ivan3") should throw the exception

9) In third activity [x]
 9.1 create try-catch blocks
 9.2 handel the exceptions



###### BONUS ######

1) Think how to include abstraction and interfaces, for example create abstraction Humanity
2) Try to save employee list in to TXT file on HDD
3) Develop println of n Fibonacci_number https://en.wikipedia.org/wiki/Fibonacci_number
    For example if user put 7 -> 0 1 1 2 3 5 8. if user put 10 -> 0 1 1 2 3 5 8 13 21 34

4) Sort employees by first and second name
5) in secondActivityTest try to implement test ->
   public void testDivideThrowError()
 and check if trying to divide by 0 the correct exception in place

6)BONUS level - In second activity try to implement user interface for:
  		// 1) insert values from keyboard
  		// 2) choose type of calculation

